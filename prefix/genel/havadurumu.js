const { EmbedBuilder, Colors } = require("discord.js");
const weather = require('weather-js');

exports.run = async (client, message, args) => {
    const ≈üehir = args.join(" ");
    
    if (!≈üehir) {
        return message.reply("‚ùå L√ºtfen hava durumunu √∂ƒürenmek istediƒüiniz ≈üehri belirtin! √ñrnek: `n.havadurumu Istanbul`");
    }
    
    const dereceSe√ßimi = args[args.length - 1];
    const derece = (dereceSe√ßimi === "F" || dereceSe√ßimi === "f") ? "F" : "C";
    
    if (dereceSe√ßimi === "F" || dereceSe√ßimi === "f") {
        args.pop();
    }
    
    const replyMsg = await message.reply("üîç Hava durumu bilgisi aranƒ±yor...");
    
    try {
        weather.find({ search: ≈üehir, degreeType: derece }, function(err, result) {
            if (err) {
                console.error(err);
                return replyMsg.edit("‚ùå Hava durumu bilgisi alƒ±nƒ±rken bir hata olu≈ütu. L√ºtfen daha sonra tekrar deneyin.");
            }
            
            if (!result || result.length === 0) {
                return replyMsg.edit("‚ùì Belirtilen ≈üehir bulunamadƒ±. L√ºtfen ge√ßerli bir ≈üehir adƒ± girin.");
            }
            
            const current = result[0].current;
            const location = result[0].location;
            
            const havaDurumu = {
                "Sunny": "G√ºne≈üli",
                "Clear": "A√ßƒ±k",
                "Mostly Sunny": "√áoƒüunlukla G√ºne≈üli",
                "Partly Sunny": "Kƒ±smen G√ºne≈üli",
                "Partly Cloudy": "Par√ßalƒ± Bulutlu",
                "Mostly Cloudy": "√áoƒüunlukla Bulutlu",
                "Cloudy": "Bulutlu",
                "Rain": "Yaƒümurlu",
                "Light Rain": "Hafif Yaƒümurlu",
                "Rain Showers": "Saƒüanak Yaƒüƒ±≈ülƒ±",
                "Thunderstorms": "G√∂k G√ºr√ºlt√ºl√º Fƒ±rtƒ±na",
                "Snow": "Karlƒ±",
                "Light Snow": "Hafif Karlƒ±",
                "Fog": "Sisli",
                "T-Storms": "G√∂k G√ºr√ºlt√ºl√º Fƒ±rtƒ±na",
                "Mostly Clear": "√áoƒüunlukla A√ßƒ±k"
            };
            
            const durumTR = havaDurumu[current.skytext] || current.skytext;
            
            const weatherEmbed = new EmbedBuilder()
                .setTitle(`üå°Ô∏è ${location.name} Hava Durumu`)
                .setColor(Colors.Blue)
                .setThumbnail(current.imageUrl)
                .addFields(
                    { name: 'üå§Ô∏è Durum', value: `${durumTR}`, inline: true },
                    { name: 'üå°Ô∏è Sƒ±caklƒ±k', value: `${current.temperature}¬∞ ${derece}`, inline: true },
                    { name: 'üå¨Ô∏è Hissedilen', value: `${current.feelslike}¬∞ ${derece}`, inline: true },
                    { name: 'üí® R√ºzgar', value: `${current.winddisplay}`, inline: true },
                    { name: 'üíß Nem', value: `${current.humidity}%`, inline: true },
                    { name: 'üåê Zaman Dilimi', value: `UTC${location.timezone >= 0 ? '+' + location.timezone : location.timezone}`, inline: true }
                )
                .setFooter({ text: `Son g√ºncelleme: ${current.observationtime} - ${current.observationpoint}` })
                .setTimestamp();
            
            replyMsg.edit({ content: null, embeds: [weatherEmbed] });
        });
    } catch (error) {
        console.error("Hava durumu komutu hatasƒ±:", error);
        replyMsg.edit("‚ùå Beklenmeyen bir hata olu≈ütu. L√ºtfen daha sonra tekrar deneyin.");
    }
};

exports.conf = {
    aliases: ["hava", "weather", "hd"]
};

exports.help = {
    name: "havadurumu"
}; 